{% comment %}
  Renders a header search modal. Should be used with 'header.liquid'
  Modified for Souled Store style expanding search bar with:
  - Custom placeholder text
  - Empty search prevention
  - Focus retention on empty search

  Accepts:
  - input_id: {String} Id for the search input element (required)

  Usage:
  {% render 'header-search', input_id: 'My-Id'%}
{% endcomment %}

<div class="header__search">
  <div class="search-modal__form">
    <form action="{{ routes.search_url }}" method="get" role="search" class="search search-modal__form">
      <div class="field">
        <input
          class="search__input field__input"
          id="{{ input_id }}"
          type="search"
          name="q"
          value="{{ search.terms | escape }}"
          placeholder="What are you looking for?"
          {%- if settings.predictive_search_enabled -%}
            role="combobox"
            aria-expanded="false"
            aria-owns="predictive-search-results"
            aria-controls="predictive-search-results"
            aria-haspopup="listbox"
            aria-autocomplete="list"
            autocorrect="off"
            autocomplete="off"
            autocapitalize="off"
            spellcheck="false"
          {%- endif -%}
        >
        <button
          type="reset"
          class="reset__button field__button{% if search.terms == blank %} hidden{% endif %}"
          aria-label="{{ 'general.search.reset' | t }}"
        >
          <span class="svg-wrapper">
            {{- 'icon-close.svg' | inline_asset_content -}}
          </span>
        </button>
        <button 
          type="submit"
          class="search__button field__button" 
          aria-label="{{ 'general.search.search' | t }}"
          onclick="if(!this.closest('form').querySelector('.search__input').value.trim()) { this.closest('form').querySelector('.search__input').focus(); return false; }"
        >
          <span class="svg-wrapper">
            <i class="fa-solid fa-magnifying-glass" style="font-size: 2rem;"></i>
          </span>
        </button>
      </div>

      {%- if settings.predictive_search_enabled -%}
        <div class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
          {%- render 'loading-spinner', class: 'predictive-search__loading-state' -%}
        </div>

        <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
      {%- endif -%}
    </form>
  </div>
</div>

<style>
  /* Ensure search box stays visible when empty */
  .header__search details[open] > .search-modal {
    display: none !important;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const searchForms = document.querySelectorAll('.header__search form');
  
  searchForms.forEach(form => {
    const searchButton = form.querySelector('.search__button');
    const searchInput = form.querySelector('.search__input');
    const searchContainer = form.closest('.header__search');
    
    // Handle search button click
    searchButton.addEventListener('click', function(e) {
      if (!searchInput.value.trim()) {
        e.preventDefault();
        searchContainer.classList.add('active');
        searchInput.focus();
      }
    });
    
    // Handle input focus
    searchInput.addEventListener('focus', function() {
      searchContainer.classList.add('active');
    });
    
    // Handle input blur
    searchInput.addEventListener('blur', function() {
      if (!this.value.trim()) {
        searchContainer.classList.remove('active');
      }
    });
  });
});
</script>